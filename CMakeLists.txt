cmake_minimum_required(VERSION 3.23.0)
project(Minecraft)

set(
    JsonArgs
    -DCMAKE_BUILD_TYPE:STRING="Release" 
    -DCMAKE_INSTALL_PREFIX:PATH="/home/seldron/Projects/mine-C-raft/Includes" 
    -DJSON_BuildTests:BOOL="0" 
    -DBUILD_TESTING:BOOL="0" 
)

set(
    OgreArgs
    -DOGRE_BUILD_COMPONENT_VOLUME:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_OVERLAY_IMGUI:BOOL="0" 
    -DOGRE_BUILD_PLUGIN_PCZ:BOOL="0" 
    -DOGRE_BUILD_RENDERSYSTEM_GLES2:BOOL="0" 
    -DOGRE_BUILD_PLUGIN_BSP:BOOL="0" 
    -DCMAKE_INSTALL_PREFIX:PATH="/home/seldron/Projects/mine-C-raft/Includes" 
    -DOGRE_BUILD_PLUGIN_OCTREE:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_PYTHON:BOOL="0" 
    -DOGRE_INSTALL_TOOLS:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_TERRAIN:BOOL="0" 
    -DOGRE_BUILD_SAMPLES:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_CSHARP:BOOL="0" 
    -DOGRE_BUILD_DEPENDENCIES:BOOL="0" 
    -DOGRE_BUILD_PLUGIN_FREEIMAGE:BOOL="0" 
    -DOGRE_BUILD_PLUGIN_EXRCODEC:BOOL="0" 
    -DOGRE_BUILD_PLUGIN_PFX:BOOL="0" 
    -DOGRE_INSTALL_DOCS:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_PROPERTY:BOOL="0" 
    -DOGRE_GLSUPPORT_USE_EGL:BOOL="0" 
    -DOGRE_BUILD_PLUGIN_ASSIMP:BOOL="0" 
    -DOGRE_INSTALL_SAMPLES:BOOL="0" 
    -DOGRE_BUILD_RENDERSYSTEM_GL:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_RTSHADERSYSTEM:BOOL="1" 
    -DOGRE_BUILD_PLUGIN_STBI:BOOL="0" 
    -DOGRE_BUILD_PLUGIN_DOT_SCENE:BOOL="0" 
    -DOGRE_ENABLE_PRECOMPILED_HEADERS:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_MESHLODGENERATOR:BOOL="0" 
    -DOGRE_BUILD_COMPONENT_PAGING:BOOL="0" 
    -DOGRE_BUILD_TOOLS:BOOL="0" 
    -DOGRE_ASSERT_MODE:STRING="0" 
    -DOGRE_BUILD_PLUGIN_CG:BOOL="0" 
    -DOGRE_BUILD_RENDERSYSTEM_GL3PLUS:BOOL="0" 
    -DOGRE_BUILD_RTSHADERSYSTEM_SHADERS:BOOL="1" 
    -DCMAKE_BUILD_TYPE:STRING="Release"
)

include_directories( #Code include directories
    Code
)

set( #Code include cpp files
    CodeFiles
    Code/Debug.cpp
    Code/World.cpp
    Code/GraphicsMain.cpp
    Code/WorldGeneration.cpp
)

include_directories( #includes include directory
    Includes
    Includes/include
)

add_executable(
    ${PROJECT_NAME} 
    ${CodeFiles}
)